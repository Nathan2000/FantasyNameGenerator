name: Build FantasyNameGenerator

on:
  push:
    branches: [ "master" ]
    tags:
    - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches: [ "*" ]
  workflow_dispatch:

env:
  Zip_Filename: FantasyNameGenerator.zip

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]
    runs-on: windows-latest
    env:
      Wpf_Dir: FantasyNameGenerator.WPF
      Wpf_App: FantasyNameGenerator.WPF/FantasyNameGenerator.WPF.csproj
      Blazor_Dir: FantasyNameGenerator.Blazor
      Blazor_App: FantasyNameGenerator.Blazor/FantasyNameGenerator.Blazor.csproj
      Configuration: ${{ matrix.configuration }}
      Runtime: win-x64
      Wpf_Output_Dir: publish/wpf
      Blazor_Output_Dir: publish/blazor
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x
        
    - name: Add .NET tools to PATH
      run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

    - name: Install LibMan CLI
      run: dotnet tool install -g Microsoft.Web.LibraryManager.Cli

    - name: Restore dependencies
      run: dotnet restore

    - name: Restore LibMan libraries
      working-directory: ${{ env.Blazor_Dir }}
      run: libman restore

    - name: Build solution
      run: dotnet build --configuration ${{ env.Configuration }} --no-restore

    - name: Execute unit tests
      if: matrix.configuration == 'Debug'
      run: dotnet test --configuration ${{ env.Configuration }} --no-build

    - name: Publish WPF app
      if: matrix.configuration == 'Release'
      run: >
        dotnet publish ${{ env.Wpf_App }}
        -c ${{ env.Configuration }}
        -r ${{ env.Runtime }}
        --self-contained true
        -p:PublishSingleFile=true
        -o ${{ env.Wpf_Output_Dir }}

    - name: Create ZIP archive
      if: matrix.configuration == 'Release'
      run: Compress-Archive -Path ${{ env.Wpf_Output_Dir }}\* -DestinationPath ${{ env.Zip_Filename }}

    - name: Upload artifacts
      if: matrix.configuration == 'Release'
      uses: actions/upload-artifact@v4
      with:
        name: FantasyNameGenerator
        path: ${{ env.Zip_Filename }}
        
    - name: Publish Blazor WebAssembly
      if: matrix.configuration == 'Release'
      run: >
        dotnet publish ${{ env.Blazor_App }}
        -c ${{ env.Configuration }}
        -o ${{ env.Blazor_Output_Dir }}

    - name: Replace the base href in index.html
      if: matrix.configuration == 'Release'
      uses: SteveSandersonMS/ghaction-rewrite-base-href@v1
      with:
        html_path: ${{ env.Blazor_Output_Dir }}/wwwroot/index.html
        base_href: /FantasyNameGenerator/

    - name: Upload Blazor site as Pages artifact
      if: matrix.configuration == 'Release'
      uses: actions/upload-pages-artifact@v3
      with:
        path: ${{ env.Blazor_Output_Dir }}/wwwroot

    - name: Upload Blazor WebAssembly to GitHub Pages
      if: matrix.configuration == 'Release'
      uses: actions/deploy-pages@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: build
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Download ZIP from build job
      uses: actions/download-artifact@v4
      with:
        name: FantasyNameGenerator
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Fantasy Name Generator ${{ github.ref_name }}
        body: |
          New release for FantasyNameGenerator
    - name: Upload ZIP to GitHub Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.Zip_Filename }}
        asset_name: ${{ env.Zip_Filename }}
        asset_content_type: application/zip